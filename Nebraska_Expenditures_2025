{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMW/dBxe18bRGdNDp/W6eB7",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/anythonyschomer/Projects/blob/main/Nebraska_Expenditures_2025\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 73
        },
        "id": "XKJ9TJdEoGnI",
        "outputId": "a8391607-c4ca-4f73-cb7e-cd49b6e873d1"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-fd360bfc-9386-4ef2-9bd4-cca041381987\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-fd360bfc-9386-4ef2-9bd4-cca041381987\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving 2025_ExpenditureExtract.csv.zip to 2025_ExpenditureExtract.csv (1).zip\n"
          ]
        }
      ],
      "source": [
        "from google.colab import files\n",
        "uploaded = files.upload()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "df = pd.read_csv(\"2025_ExpenditureExtract.csv.zip\", encoding=\"latin1\")\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 516
        },
        "id": "fUoEpag5oWJx",
        "outputId": "fc789983-6a4a-4a70-9cad-aa75cc3b5b26"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Expenditure ID  Org ID           Filer Type                     Filer Name  \\\n",
              "0           61376    7319  Candidate Committee  JONI ALBRECHT FOR LEGISLATURE   \n",
              "1           61398    7645  Candidate Committee   FRIENDS FOR JOHN FREDRICKSON   \n",
              "2           64449    7532  Candidate Committee        JEAN STOTHERT FOR OMAHA   \n",
              "3           66562    7382  Candidate Committee     FESTERSEN FOR CITY COUNCIL   \n",
              "4           66970    7532  Candidate Committee        JEAN STOTHERT FOR OMAHA   \n",
              "\n",
              "     Candidate Name Expenditure Transaction Type     Expenditure Sub Type  \\\n",
              "0     JONI ALBRECHT             Campaign Expense                  Unknown   \n",
              "1  JOHN FREDRICKSON             Campaign Expense                  Unknown   \n",
              "2     JEAN STOTHERT      Third Party Expenditure  Third Party Expenditure   \n",
              "3    PETE FESTERSEN             Campaign Expense                  Unknown   \n",
              "4     JEAN STOTHERT             Campaign Expense                  Unknown   \n",
              "\n",
              "  Expenditure Date  Expenditure Amount                Description  ... State  \\\n",
              "0       01/01/2024             1000.00         FUNDRAISER TICKETS  ...    NE   \n",
              "1       01/01/2024              100.00               INVOICE 1099  ...    NE   \n",
              "2       01/01/2024               12.00                   SOFTWARE  ...    CA   \n",
              "3       01/01/2025              250.00  REIMBURSEMENT FOR NGP VAN  ...    TN   \n",
              "4       01/01/2025            16654.45          CAMPAIGN EXPENSES  ...    NE   \n",
              "\n",
              "     Zip  Filed Date Support Or Oppose Candidate Name or Ballot Issue  \\\n",
              "0  68506  01/06/2025               NaN                            NaN   \n",
              "1  68106  01/31/2025               NaN                            NaN   \n",
              "2  94043  01/31/2025               NaN                            NaN   \n",
              "3  37215  02/27/2025               NaN                            NaN   \n",
              "4  68142  03/03/2025               NaN                            NaN   \n",
              "\n",
              "  Jurisdiction - Office - District or Ballot Description Amended Employer  \\\n",
              "0                                                NaN           N      NaN   \n",
              "1                                                NaN           N      NaN   \n",
              "2                                                NaN           N      NaN   \n",
              "3                                                NaN           N      NaN   \n",
              "4                                                NaN           N     SELF   \n",
              "\n",
              "   Occupation Principal Place of Business  \n",
              "0         NaN                         NaN  \n",
              "1         NaN                         NaN  \n",
              "2         NaN                         NaN  \n",
              "3         NaN                         NaN  \n",
              "4  CONSULTANT                         NaN  \n",
              "\n",
              "[5 rows x 28 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-81c4cd2e-6977-4ab7-959a-40a7455f8e93\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Expenditure ID</th>\n",
              "      <th>Org ID</th>\n",
              "      <th>Filer Type</th>\n",
              "      <th>Filer Name</th>\n",
              "      <th>Candidate Name</th>\n",
              "      <th>Expenditure Transaction Type</th>\n",
              "      <th>Expenditure Sub Type</th>\n",
              "      <th>Expenditure Date</th>\n",
              "      <th>Expenditure Amount</th>\n",
              "      <th>Description</th>\n",
              "      <th>...</th>\n",
              "      <th>State</th>\n",
              "      <th>Zip</th>\n",
              "      <th>Filed Date</th>\n",
              "      <th>Support Or Oppose</th>\n",
              "      <th>Candidate Name or Ballot Issue</th>\n",
              "      <th>Jurisdiction - Office - District or Ballot Description</th>\n",
              "      <th>Amended</th>\n",
              "      <th>Employer</th>\n",
              "      <th>Occupation</th>\n",
              "      <th>Principal Place of Business</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>61376</td>\n",
              "      <td>7319</td>\n",
              "      <td>Candidate Committee</td>\n",
              "      <td>JONI ALBRECHT FOR LEGISLATURE</td>\n",
              "      <td>JONI ALBRECHT</td>\n",
              "      <td>Campaign Expense</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>01/01/2024</td>\n",
              "      <td>1000.00</td>\n",
              "      <td>FUNDRAISER TICKETS</td>\n",
              "      <td>...</td>\n",
              "      <td>NE</td>\n",
              "      <td>68506</td>\n",
              "      <td>01/06/2025</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>61398</td>\n",
              "      <td>7645</td>\n",
              "      <td>Candidate Committee</td>\n",
              "      <td>FRIENDS FOR JOHN FREDRICKSON</td>\n",
              "      <td>JOHN FREDRICKSON</td>\n",
              "      <td>Campaign Expense</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>01/01/2024</td>\n",
              "      <td>100.00</td>\n",
              "      <td>INVOICE 1099</td>\n",
              "      <td>...</td>\n",
              "      <td>NE</td>\n",
              "      <td>68106</td>\n",
              "      <td>01/31/2025</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>64449</td>\n",
              "      <td>7532</td>\n",
              "      <td>Candidate Committee</td>\n",
              "      <td>JEAN STOTHERT FOR OMAHA</td>\n",
              "      <td>JEAN STOTHERT</td>\n",
              "      <td>Third Party Expenditure</td>\n",
              "      <td>Third Party Expenditure</td>\n",
              "      <td>01/01/2024</td>\n",
              "      <td>12.00</td>\n",
              "      <td>SOFTWARE</td>\n",
              "      <td>...</td>\n",
              "      <td>CA</td>\n",
              "      <td>94043</td>\n",
              "      <td>01/31/2025</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>66562</td>\n",
              "      <td>7382</td>\n",
              "      <td>Candidate Committee</td>\n",
              "      <td>FESTERSEN FOR CITY COUNCIL</td>\n",
              "      <td>PETE FESTERSEN</td>\n",
              "      <td>Campaign Expense</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>01/01/2025</td>\n",
              "      <td>250.00</td>\n",
              "      <td>REIMBURSEMENT FOR NGP VAN</td>\n",
              "      <td>...</td>\n",
              "      <td>TN</td>\n",
              "      <td>37215</td>\n",
              "      <td>02/27/2025</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>66970</td>\n",
              "      <td>7532</td>\n",
              "      <td>Candidate Committee</td>\n",
              "      <td>JEAN STOTHERT FOR OMAHA</td>\n",
              "      <td>JEAN STOTHERT</td>\n",
              "      <td>Campaign Expense</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>01/01/2025</td>\n",
              "      <td>16654.45</td>\n",
              "      <td>CAMPAIGN EXPENSES</td>\n",
              "      <td>...</td>\n",
              "      <td>NE</td>\n",
              "      <td>68142</td>\n",
              "      <td>03/03/2025</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>N</td>\n",
              "      <td>SELF</td>\n",
              "      <td>CONSULTANT</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 28 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-81c4cd2e-6977-4ab7-959a-40a7455f8e93')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-81c4cd2e-6977-4ab7-959a-40a7455f8e93 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-81c4cd2e-6977-4ab7-959a-40a7455f8e93');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-01b19d5c-3bbd-4b7b-97e1-8f3911c6c202\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-01b19d5c-3bbd-4b7b-97e1-8f3911c6c202')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-01b19d5c-3bbd-4b7b-97e1-8f3911c6c202 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.drop_duplicates()\n",
        "\n",
        "df['Expenditure Amount'] = pd.to_numeric(df['Expenditure Amount'], errors='coerce')\n",
        "df = df.dropna(subset=['Expenditure Amount'])\n",
        "\n",
        "df['Expenditure Date'] = pd.to_datetime(df['Expenditure Date'], errors='coerce')\n",
        "df = df.dropna(subset=['Expenditure Date'])\n",
        "\n",
        "df['Description'] = df['Description'].fillna('')\n",
        "df['Payee or Recipient or In-Kind Contributor Name'] = df['Payee or Recipient or In-Kind Contributor Name'].fillna('Unknown')\n",
        "df['Candidate Name'] = df['Candidate Name'].fillna('N/A')\n",
        "\n",
        "df['Address 1'] = df['Address 1'].fillna('')\n",
        "df['City'] = df['City'].fillna('')\n",
        "df['State'] = df['State'].fillna('')\n",
        "df['Zip'] = df['Zip'].fillna('')\n",
        "\n",
        "df = df.dropna(subset=['Org ID'])\n",
        "df = df.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "4Cm4h4Z7s7A3"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.shape)\n",
        "print(df.isnull().sum())\n",
        "print(df.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S_CgCgyHtPDE",
        "outputId": "e0ba0b22-b768-4c28-b827-45c71abdf938"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(10692, 28)\n",
            "Expenditure ID                                                0\n",
            "Org ID                                                        0\n",
            "Filer Type                                                    0\n",
            "Filer Name                                                    0\n",
            "Candidate Name                                                0\n",
            "Expenditure Transaction Type                                  0\n",
            "Expenditure Sub Type                                          0\n",
            "Expenditure Date                                              0\n",
            "Expenditure Amount                                            0\n",
            "Description                                                   0\n",
            "Payee or Recipient or In-Kind Contributor Type               93\n",
            "Payee or Recipient or In-Kind Contributor Name                0\n",
            "First Name                                                 9553\n",
            "Middle Name                                               10641\n",
            "Suffix                                                    10690\n",
            "Address 1                                                     0\n",
            "Address 2                                                  9702\n",
            "City                                                          0\n",
            "State                                                         0\n",
            "Zip                                                           0\n",
            "Filed Date                                                    0\n",
            "Support Or Oppose                                          9710\n",
            "Candidate Name or Ballot Issue                             9710\n",
            "Jurisdiction - Office - District or Ballot Description     9710\n",
            "Amended                                                       0\n",
            "Employer                                                  10663\n",
            "Occupation                                                10663\n",
            "Principal Place of Business                               10683\n",
            "dtype: int64\n",
            "   Expenditure ID  Org ID           Filer Type                     Filer Name  \\\n",
            "0           61376    7319  Candidate Committee  JONI ALBRECHT FOR LEGISLATURE   \n",
            "1           61398    7645  Candidate Committee   FRIENDS FOR JOHN FREDRICKSON   \n",
            "2           64449    7532  Candidate Committee        JEAN STOTHERT FOR OMAHA   \n",
            "3           66562    7382  Candidate Committee     FESTERSEN FOR CITY COUNCIL   \n",
            "4           66970    7532  Candidate Committee        JEAN STOTHERT FOR OMAHA   \n",
            "\n",
            "     Candidate Name Expenditure Transaction Type     Expenditure Sub Type  \\\n",
            "0     JONI ALBRECHT             Campaign Expense                  Unknown   \n",
            "1  JOHN FREDRICKSON             Campaign Expense                  Unknown   \n",
            "2     JEAN STOTHERT      Third Party Expenditure  Third Party Expenditure   \n",
            "3    PETE FESTERSEN             Campaign Expense                  Unknown   \n",
            "4     JEAN STOTHERT             Campaign Expense                  Unknown   \n",
            "\n",
            "  Expenditure Date  Expenditure Amount                Description  ... State  \\\n",
            "0       2024-01-01             1000.00         FUNDRAISER TICKETS  ...    NE   \n",
            "1       2024-01-01              100.00               INVOICE 1099  ...    NE   \n",
            "2       2024-01-01               12.00                   SOFTWARE  ...    CA   \n",
            "3       2025-01-01              250.00  REIMBURSEMENT FOR NGP VAN  ...    TN   \n",
            "4       2025-01-01            16654.45          CAMPAIGN EXPENSES  ...    NE   \n",
            "\n",
            "     Zip  Filed Date Support Or Oppose Candidate Name or Ballot Issue  \\\n",
            "0  68506  01/06/2025               NaN                            NaN   \n",
            "1  68106  01/31/2025               NaN                            NaN   \n",
            "2  94043  01/31/2025               NaN                            NaN   \n",
            "3  37215  02/27/2025               NaN                            NaN   \n",
            "4  68142  03/03/2025               NaN                            NaN   \n",
            "\n",
            "  Jurisdiction - Office - District or Ballot Description Amended Employer  \\\n",
            "0                                                NaN           N      NaN   \n",
            "1                                                NaN           N      NaN   \n",
            "2                                                NaN           N      NaN   \n",
            "3                                                NaN           N      NaN   \n",
            "4                                                NaN           N     SELF   \n",
            "\n",
            "   Occupation Principal Place of Business  \n",
            "0         NaN                         NaN  \n",
            "1         NaN                         NaN  \n",
            "2         NaN                         NaN  \n",
            "3         NaN                         NaN  \n",
            "4  CONSULTANT                         NaN  \n",
            "\n",
            "[5 rows x 28 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Nebraska 2025 Expenditures Data Analysis\n",
        "\n",
        "This project explores the State of Nebraska's public expenditures data for the year 2025. The goal was to understand where the money is being spent across different departments and categories, and to identify any notable trends or insights.\n",
        "\n",
        "## What I Did\n",
        "- Loaded the dataset from the official Nebraska government website.\n",
        "- Cleaned the data by handling missing values, converting data types, and removing duplicates.\n",
        "- Summarized total expenditures by department and by transaction type.\n",
        "- Visualized the top spending departments and monthly expenditure trends.\n",
        "- Highlighted some of the largest individual expenses.\n",
        "\n",
        "## Key Takeaways\n",
        "- A few departments account for the majority of spending.\n",
        "- Monthly spending shows clear fluctuations, possibly linked to budget cycles.\n",
        "- Certain large expenditures stood out, which could be explored further."
      ],
      "metadata": {
        "id": "GFu6cQ0Mtqx0"
      }
    }
  ]
}